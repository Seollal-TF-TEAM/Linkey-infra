apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: default
data:
  init.sql: |
    CREATE TABLE users (
        github_user_id BIGINT PRIMARY KEY,
        github_user_name VARCHAR(255) NOT NULL,
        github_user_email VARCHAR(255) NOT NULL,
        github_repos_url VARCHAR(255) NOT NULL,
        github_updated_at TIMESTAMP,
        created_at TIMESTAMP NOT NULL,
        updated_at TIMESTAMP NOT NULL
    );

    CREATE TABLE teams (
        team_id INTEGER PRIMARY KEY,
        team_name TEXT NOT NULL,
        team_desc TEXT,
        created_at TIMESTAMP NOT NULL,
        updated_at TIMESTAMP NOT NULL
    );

    CREATE TABLE projects (
        project_id INTEGER PRIMARY KEY,
        project_name TEXT NOT NULL,
        project_desc TEXT,
        team_id INTEGER NOT NULL,
        created_at TIMESTAMP NOT NULL,
        updated_at TIMESTAMP NOT NULL,
        FOREIGN KEY (team_id) REFERENCES teams(team_id) ON DELETE CASCADE
    );

    CREATE TABLE sprints (
        sprint_id INTEGER PRIMARY KEY,
        sprint_name TEXT NOT NULL,
        sprint_contents TEXT,
        project_id INTEGER NOT NULL,
        sprint_start_at DATE NOT NULL,
        sprint_end_at DATE NOT NULL,
        created_at TIMESTAMP NOT NULL,
        updated_at TIMESTAMP NOT NULL,
        FOREIGN KEY (project_id) REFERENCES projects(project_id) ON DELETE CASCADE
    );

    CREATE TABLE team_members (
        member_id INTEGER PRIMARY KEY,
        team_id INTEGER NOT NULL,
        member_role VARCHAR(50) NOT NULL,  -- ENUM 타입을 문자열로 처리
        github_user_id BIGINT NOT NULL,
        created_at TIMESTAMP NOT NULL,
        updated_at TIMESTAMP NOT NULL,
        FOREIGN KEY (team_id) REFERENCES teams(team_id) ON DELETE CASCADE,
        FOREIGN KEY (github_user_id) REFERENCES users(github_user_id) ON DELETE CASCADE
    );

    CREATE TABLE todos (
        todo_id BIGINT PRIMARY KEY,
        todo_contents TEXT NOT NULL,
        todo_done_yn CHAR(1) NOT NULL CHECK (todo_done_yn IN ('Y', 'N')),
        sprint_id INTEGER NOT NULL,
        created_user_id BIGINT NOT NULL,
        created_at TIMESTAMP NOT NULL,
        updated_at TIMESTAMP NOT NULL,
        FOREIGN KEY (sprint_id) REFERENCES sprints(sprint_id) ON DELETE CASCADE,
        FOREIGN KEY (created_user_id) REFERENCES users(github_user_id) ON DELETE CASCADE
    );

    CREATE TABLE commits (
        commit_id INTEGER PRIMARY KEY,
        github_commit_sha VARCHAR(100) NOT NULL,
        github_commit_message TEXT NOT NULL,
        github_commit_user_id BIGINT NOT NULL,
        github_commit_date TIMESTAMP NOT NULL,
        todo_id INTEGER NOT NULL,
        FOREIGN KEY (github_commit_user_id) REFERENCES users(github_user_id) ON DELETE CASCADE,
        FOREIGN KEY (todo_id) REFERENCES todos(todo_id) ON DELETE CASCADE
    );

    -- Sequence

    -- team_members
    CREATE SEQUENCE team_members_seq_id START 1;

    ALTER TABLE team_members
    ALTER COLUMN member_id SET DEFAULT nextval('team_members_seq_id');

    ALTER SEQUENCE team_members_seq_id OWNED BY team_members.member_id;

    -- teams
    CREATE SEQUENCE team_seq_id START 1;

    ALTER TABLE teams
    ALTER COLUMN team_id SET DEFAULT nextval('team_seq_id');

    ALTER SEQUENCE team_seq_id OWNED BY teams.team_id;

    -- projects
    CREATE SEQUENCE projects_project_id_seq START 1;

    ALTER TABLE projects
    ALTER COLUMN project_id SET DEFAULT nextval('projects_project_id_seq');

    ALTER SEQUENCE projects_project_id_seq OWNED BY projects.project_id;

    -- sprints
    CREATE SEQUENCE sprints_sprint_id_seq START 1;

    ALTER TABLE sprints
    ALTER COLUMN sprint_id SET DEFAULT nextval('sprints_sprint_id_seq');

    ALTER SEQUENCE sprints_sprint_id_seq OWNED BY sprints.sprint_id;

    -- todos
    CREATE SEQUENCE todos_todo_id_seq START 1;

    ALTER TABLE todos 
    ALTER COLUMN todo_id SET DEFAULT nextval('todos_todo_id_seq');

    ALTER SEQUENCE todos_todo_id_seq OWNED BY todos.todo_id;

    -- commits
    CREATE SEQUENCE commits_commit_id_seq START 1;

    ALTER TABLE commits 
    ALTER COLUMN commit_id SET DEFAULT nextval('commits_commit_id_seq');

    ALTER SEQUENCE commits_commit_id_seq OWNED BY commits.commit_id;